"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventsClient = void 0;
const axios_1 = require("axios");
const config_1 = require("../../config");
const types_1 = require("./types");
class EventsClient {
    constructor(authenticator) {
        this.authenticator = authenticator;
    }
    async send(tenantId, ev) {
        this.validateInput(ev);
        await this.authenticator.validateAuthentication();
        const response = await this.sendEventRequest(tenantId, ev);
        return response.eventId;
    }
    async getStatus(eventId) {
        await this.authenticator.validateAuthentication();
        return this.sendEventStatusRequest(eventId);
    }
    validateInput(ev) {
        if (!ev.eventKey) {
            throw new types_1.NoEventKeyException();
        }
        if (!(ev.data && ev.data.title && ev.data.description)) {
            throw new types_1.NoDataException();
        }
    }
    async sendEventRequest(tenantId, ev) {
        const response = await axios_1.default.post(`${config_1.config.urls.eventService}/resources/triggers/v3`, ev, {
            headers: {
                'x-access-token': this.authenticator.accessToken,
                'frontegg-tenant-id': tenantId,
            },
        });
        return response.data;
    }
    async sendEventStatusRequest(eventId) {
        const response = await axios_1.default.get(`${config_1.config.urls.eventService}/resources/triggers/v3/${eventId}/statuses`, {
            headers: {
                'x-access-token': this.authenticator.accessToken,
            },
        });
        return response.data;
    }
}
exports.EventsClient = EventsClient;
//# sourceMappingURL=events.js.map