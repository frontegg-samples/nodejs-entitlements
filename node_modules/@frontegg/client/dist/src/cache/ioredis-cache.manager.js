"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IORedisCacheManager = void 0;
const package_loader_1 = require("../utils/package-loader");
class IORedisCacheManager {
    constructor(options) {
        const RedisInstance = package_loader_1.PackageUtils.loadPackage('ioredis');
        this.redisManager = new RedisInstance(options);
    }
    async set(key, data, options) {
        if (options === null || options === void 0 ? void 0 : options.expiresInSeconds) {
            this.redisManager.set(key, JSON.stringify(data), 'EX', options.expiresInSeconds);
        }
        else {
            this.redisManager.set(key, JSON.stringify(data));
        }
    }
    async get(key) {
        const stringifiedData = await this.redisManager.get(key);
        return stringifiedData ? JSON.parse(stringifiedData) : null;
    }
    async del(key) {
        if (key.length) {
            await this.redisManager.del(key);
        }
    }
}
exports.IORedisCacheManager = IORedisCacheManager;
//# sourceMappingURL=ioredis-cache.manager.js.map